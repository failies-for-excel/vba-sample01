
 
■記事作成（Sub 連続実行）
　各プロシージャを連続実行する。Call関数を利用している。

■JVNDB番号取得（Sub jvn）
　各Worksheetから「JVNDB」という文字列と一致する値をFind関数にて取得する。
　またこの際、Main、database、single、many、記事シートに関しては検索対象としていない。

■CVE番号取得（Sub tekisitu）
　各Worksheetから「CVE-」という文字列と一致する値をFind関数にて取得する。
　またこの際、Main、database、single、many、記事シートに関しては検索対象としていない。

■影響を受ける対象製品取得（Sub product）
　各Worksheetから「影響を受けるシステム」と「想定される影響」という文字列と一致する
　セルをFind関数で取得する。
　セルの行番号を使い、「想定される影響の行番号」―「影響を受けるシステムの行番号」を得る。
　この得た値を使い、「想定される影響」と「影響を受けるシステム」との間にある文字列を取得する。

■対策情報取得（Sub taisaku）
　各Worksheetから「適切な対策」という文字列と一致する値を取得する。
　またこの際、Main、database、single、many、記事シートに関しては検索対象としていない。

■詳細情報取得（Sub Syousai）
　各Worksheetから「可能性」という文字列と一致する値を取得する。
　またこの際、Main、database、single、many、記事シートに関しては検索対象としていない。

■ベンダ情報取得（Sub benda）
　各Worksheetから「ベンダ情報」と「CWEによる脆弱性タイプ一覧」という文字列と
　一致するセルをFind関数で取得する。
　セルの行番号を使い、「CWEによる脆弱性タイプ一覧の行番号」―「ベンダ情報の行番号」を得る。
　この得た値を使い、「CWEによる脆弱性タイプ一覧」と「ベンダ情報」との間にある文字列を取得する。

■脆弱性情報取得（Sub zeijakusei）
　各Worksheetから「脆弱性」という文字列と一致する値を取得する。
　またこの際、Main、database、single、many、記事シートに関しては検索対象としていない。

■文書校正「おける削除」（Sub ReplaceSamp1）
　Worksheet「Main」のRange関数を用いてJ1からJ6を選択する。
　この範囲にあるセルの「おける」を削除する。

■文章校正（Sub hennkou）
　Worksheet「Main」のRange関数を用いて、A1からA6、C1からC6を選択する。
　この範囲にあるセルに対して以下を行う。
　　・タブ削除
　　・改行を「・」に変換
　　・「・・」を「・」に変更
　　・「・」を改行＋「・」も変換

■セル内文字列分解1（Sub BendaSplit）
　Worksheet「Main」のA列2行から11行までのセルの中身をSplit関数で分割する。
　セルの中身は改行で分割する。分割した中身はK行に転記する。

■セル内文字列分解2（Sub ProductSplit）
　Worksheet「Main」のC列2行から11行までのセルの中身をSplit関数で分割する。
　セルの中身は改行で分割する。分割した中身はK行に転記する。

■ベンダ情報比較１（Sub suriawase）
　Worksheet「Main」のK1からK15を選択する。「・」を削除する。
　DatabaseのA列とK列にある分割した中身をすり合わせていく。K列に情報がない場合、処理を終了する。
　K列の値とA列の値が不一致の場合、A列の行番号を一つ増やし比べる。もし一致した場合は、
　K列の値に対して「！」と「　」を先頭に追加する。最終的に一致しない場合はK列の値に対して「・」を足す。

■ベンダ情報比較2（Sub suriawase2）
　Worksheet「Main」のL1からL15を選択する。「・」を削除する。
　DatabaseのA列とL列にある分割した中身をすり合わせていく。L列に情報がない場合、
　処理を終了する。L列の値とA列の値が不一致の場合、A列の行番号を一つ増やし比べる。
　もし一致した場合は、L列の値に対して「！」と「　」を先頭に追加する。
　最終的に一致しない場合はL列の値に対して「・」を足す。

■文章校正（Sub ReplaceSampl2）
　Worksheet「Main」のCells関数を用いて、K2、L2を選択する。この範囲にあるセルに対して以下を行う。
　・「！」を削除する
　・改行を消す
　・全角スペースを削除する

■テキスト修正（Sub benda0）
　記事シートをアクティブにする。singleシートのE列に値が入っている場合、記事シートのO列に値を転記する。
　改行が入っている場合、削除する。記事シートのO列にある値すべてに対して、先頭に「　」を追加する。

■テキスト修正（Sub seihin0）
　記事シートをアクティブにする。singleシートのB列に値が入っている場合、
　記事シートのP列に値を転記する。改行が入っている場合、削除する。
　記事シートのP列にある値すべてに対して、先頭に「　」を追加する。

■フォーマット転記（Sub prog2）
　SingleシートのA列、C列、D列、F列の2行目を記事シートのB列に転記する。
　その際先頭に「　」を追加する。

■Sub seihin1
　記事シートをアクティブにする。記事シートのP列に値がある場合、次の処理を行う。
　記事シートのB列にP列の値を入れる。既に値が入っている場合、改行を先頭に入れ、
　B列の値と結合する。Ｂ列に値がない場合はP列の値を結合する。

■Sub benda1
　記事シートをアクティブにする。記事シートのO列に値がある場合、次の処理を行う。
　記事シートのB列にO列の値を入れる。既に値が入っている場合、
　改行を先頭に入れ、B列の値と結合する。Ｂ列に値がない場合はO列の値を結合する。

■テキストに出力処理（Sub output）
　B列にある4行目と10行目の「！」を改行に変換する。そのあとはB列にある値を出力する。
